@model List<DigitalArena.DBContext.Product>

@{
    ViewBag.Title = "Seller Products";
    string sellerName = ViewBag.SellerName as string;
    int sellerId = (int)ViewBag.SellerId;
    Func<DateTime, string> formatDate = d => d.ToString("dd MMM yyyy hh:mm tt");
}

<!-- Breadcrumb -->
<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb bg-white px-3 py-2 rounded shadow-sm">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "AdminDashboard")" class="text-decoration-none text-dark">Admin</a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.RouteUrl("ManageSellersRoute")" class="text-decoration-none text-dark">Manage Sellers</a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.RouteUrl("SellerDetailsRoute", new { id = sellerId })" class="text-decoration-none text-dark">Seller Details</a>
        </li>
        <li class="breadcrumb-item active text-primary" aria-current="page">Seller Products</li>
    </ol>
</nav>

<h1 class="mb-1 fw-bold text-primary">Products of @sellerName</h1>
<p class="text-muted mb-4">All products uploaded by this seller</p>

<!-- Filters -->
<div class="mb-3 bg-white p-3 rounded shadow-sm">
    <div class="row g-3 align-items-end">
        <div class="col-md-3">
            <label for="searchTerm" class="form-label">Search (Name/Category)</label>
            <input type="text" id="searchTerm" class="form-control" placeholder="Search products or categories" />
        </div>
        <div class="col-md-2">
            <label for="statusFilter" class="form-label">Status</label>
            <select id="statusFilter" class="form-select">
                <option value="">All</option>
                <option value="Pending">Pending</option>
                <option value="Approved">Approved</option>
                <option value="Rejected">Rejected</option>
            </select>
        </div>
        <div class="col-md-2">
            <label for="activeFilter" class="form-label">Active</label>
            <select id="activeFilter" class="form-select">
                <option value="">All</option>
                <option value="true">Active</option>
                <option value="false">Inactive</option>
            </select>
        </div>
        <div class="col-md-2">
            <label for="priceSort" class="form-label">Price Sort</label>
            <select id="priceSort" class="form-select">
                <option value="">None</option>
                <option value="asc">Low to High</option>
                <option value="desc">High to Low</option>
            </select>
        </div>
        <div class="col-md-3 d-flex gap-2 align-items-center">
            <div>
                <label for="priceMin" class="form-label">Price Min</label>
                <input type="number" min="0" step="0.01" id="priceMin" class="form-control" placeholder="Min" />
            </div>
            <div>
                <label for="priceMax" class="form-label">Price Max</label>
                <input type="number" min="0" step="0.01" id="priceMax" class="form-control" placeholder="Max" />
            </div>
            <button id="clearFilters" class="btn btn-outline-secondary mt-3">Clear</button>
        </div>
    </div>
</div>

<!-- Table container for AJAX update -->
<div id="productsTableContainer">
    @Html.Partial("_SellerProductsTable", Model)
</div>

<a href="@Url.RouteUrl("SellerDetailsRoute", new { id = sellerId })" class="btn btn-secondary mt-3">Back to Seller Details</a>

@section scripts {
    <script>
        $(document).ready(function () {
            let timer;

            function fetchFilteredProducts() {
                const params = {
                    userId: @sellerId,
                    search: $('#searchTerm').val(),
                    status: $('#statusFilter').val(),
                    isActive: $('#activeFilter').val(),
                    priceSort: $('#priceSort').val(),
                    priceMin: $('#priceMin').val(),
                    priceMax: $('#priceMax').val(),
                };

                $.get('@Url.RouteUrl("ViewSellerProductsRoute")', params, function (data) {
                    $('#productsTableContainer').html(data);
                });
            }

            $('#searchTerm, #statusFilter, #activeFilter, #priceSort, #priceMin, #priceMax').on('input change', function () {
                clearTimeout(timer);
                timer = setTimeout(fetchFilteredProducts, 500);
            });

            $('#clearFilters').on('click', function () {
                $('#searchTerm').val('');
                $('#statusFilter').val('');
                $('#activeFilter').val('');
                $('#priceSort').val('');
                $('#priceMin').val('');
                $('#priceMax').val('');
                fetchFilteredProducts();
            });
        });
    </script>
}
