@model DigitalArena.Models.ProductDetailsViewModel
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generated Page</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Inria+Sans:wght@400;700&family=Poppins:wght@600&family=Roboto:wght@300;400;700&display=swap"
          rel="stylesheet">
    <title>Product Details</title>
    <link rel="stylesheet" href="~/Content/ProductDetails.css" />
    <link rel="stylesheet" href="~/Content/styles.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.min.js"></script>

</head>

<body>
    @Html.Partial("_Header2")
    <section id="section-main-content" class="main-content-section">
        <div class="page-wrapper">
            <div class="main-content-grid container">
                <div class="product-details-column">

                    <!-- ✅ Importmap for Three.js -->
                    <script type="importmap">
                        {
                          "imports": {
                            "three": "https://cdn.jsdelivr.net/npm/three@0.149.0/build/three.module.js",
                            "three/addons/": "https://cdn.jsdelivr.net/npm/three@0.149.0/examples/jsm/"
                          }
                        }
                    </script>

                    @{
                        bool isEbook = Model.Product.Category?.Name == "E-Book";
                        string pdfFileName = System.IO.Path.GetFileNameWithoutExtension(Model.Product.Thumbnail) + ".pdf";
                        string pdfUrl = Url.Content($"~/Assets/E-Book/product_{Model.Product.ProductId}/files/{pdfFileName}");
                    }

                    <div class="product-main-canvas">
                        @if (isEbook)
                        {
                            <div id="pdf-viewer-container" style="width: 100%; height: auto;"></div>
                            <script>
            const url = '@pdfUrl';

            const container = document.getElementById("pdf-viewer-container");

            const renderPDF = async () => {
                const loadingTask = pdfjsLib.getDocument(url);
                const pdf = await loadingTask.promise;
                const maxPages = Math.min(pdf.numPages, 10);

                for (let pageNumber = 1; pageNumber <= maxPages; pageNumber++) {
                    const page = await pdf.getPage(pageNumber);
                    const scale = 1.5;
                    const viewport = page.getViewport({ scale });

                    const canvas = document.createElement("canvas");
                    const context = canvas.getContext("2d");
                    canvas.height = viewport.height;
                    canvas.width = viewport.width;

                    const renderContext = {
                        canvasContext: context,
                        viewport: viewport
                    };

                    await page.render(renderContext).promise;
                    container.appendChild(canvas);
                }
            };

            pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js';
            renderPDF();
                            </script>
                        }
                        else
                        {
                            <canvas id="viewer" data-model-path="@Model.ModelPath"></canvas>
                            <script type="module" src="~/Scripts/custom/Load3DModel.js"></script>
                        }
                    </div>


                    <!-- ✅ Product Info -->
                    <h3 class="product-title font-inria-sans-400-20 color-text-primary">@Model.Product.Name</h3>
                    <p class="product-category font-inria-sans-400-14 color-text-secondary">@Model.Product.Category.Name</p>

                    <!-- ✅ Buttons and Stats -->
                    <div class="product-actions-bar">
                        <div class="product-actions">
                            <!-- Cart Toggle -->
                            <button class="ajax-cart add-button" data-productid="@Model.Product.ProductId">
                                <img src="~/Assets/images/@(Model.IsInCart ? "cart_filled" : "cart_outline").png" alt="Add">
                                <span class="font-inria-sans-400-20 color-text-primary">@((Model.IsInCart) ? "ADDED" : "ADD")</span>
                            </button>
                        </div>

                        <div class="product-engagement-stats">
                            <div class="stat-group ajax-like" data-productid="@Model.Product.ProductId">
                                <img class="img_like" src="~/Assets/images/@(Model.IsLiked ? "like_filled" : "like_outline").png" alt="Likes">
                                <span class="like-count font-inria-sans-400-20 color-text-primary">@Model.Product.LikeCount</span>
                            </div>

                            <div class="stat-group ajax-dislike" data-productid="@Model.Product.ProductId">
                                <img class="img_dislike" src="~/Assets/images/@(Model.IsDisliked ? "dislike_filled" : "dislike_outline").png" alt="Dislike">
                                <span class="dislike-count font-inria-sans-400-20 color-text-primary">@Model.Product.UnlikeCount</span>
                            </div>



                            <!-- View Count -->
                            <div class="stat-group">
                                <img src="~/Assets/images/fb40bebcb2ed9b930570573bc8bb9c628dd8d085.png" alt="Views" style="opacity: 0.4;">
                                <span class="font-inria-sans-400-20 color-text-primary">@Model.Product.ViewCount</span>
                            </div>

                            <!-- Download Count -->
                            <div class="stat-group">
                                <img src="~/Assets/images/9054f403eeab6912265c577d2a7ac1f6bb86acb1.png" alt="Downloads">
                                <span class="font-inria-sans-400-20 color-text-primary">@Model.DownloadCount</span>
                            </div>
                        </div>



                    </div>

                    <!-- ✅ Styled Divider -->

                    <hr class="separator-line style-22" />

                    <p class="product-description font-inria-sans-400-20 color-text-primary"> @Model.Product.Description</p>

                    <div class="product-download-area">
                        <button class="download-button-main font-inria-sans-700-20 color-text-white">PURCHASE</button>
                    </div>

                    <div class="publish-info">
                        <img src="~/Assets/images/00c3e69f4493bc2076a5cff445385528b3eb87c1.png" alt="Clock" style="opacity: 0.5;">
                        <span class="font-inria-sans-700-20 color-text-light-muted">Published @Model.PublishedAgo</span>
                    </div>

                    <!-- Comment Section -->

                    <div class="comments-section">
                        <h3 class="comments-title font-inria-sans-700-20 color-text-muted">
                            <span id="comment-count">@Model.Reviews.Count</span> @((Model.Reviews.Count == 1) ? "Comment" : "Comments")
                        </h3>
                        <div class="add-comment-area">
                            <img src="~/Assets/images/placeholder_avatar.png" alt="Your avatar" class="user-avatar-placeholder">
                            <div id="comment-form">
                                <div class="rating-stars" id="star-rating" style="display: flex;">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <img src="~/Assets/images/star_empty.png" alt="Star" class="star" data-value="@i" />
                                    }
                                </div>

                                <div class="comment-input-container">
                                    <textarea id="comment-text" class="comment-textarea" maxlength="250" placeholder="Write a comment..."></textarea>
                                    <button id="submit-comment" class="submit-icon-btn" data-value="@Model.Product.ProductId">
                                        <img src="~/Assets/site-images/arrow.png" alt="Submit" />
                                    </button>
                                </div>
                            </div>
                            <p id="comment-status" class="status-text"></p>
                        </div>

                        <hr class="separator-line style-36" />

                        <div id="user-comment-list" class="comment-list">
                            @foreach (var review in Model.Reviews.OrderByDescending(r => r.CreatedAt))
                            {
                                var timeAgo = DigitalArena.Helpers.DateHelper.GetPublishedAgo(review.CreatedAt);
                                <div class="comment-item" data-reviewid="@review.ReviewId">
                                    <img src="~/Assets/images/placeholder_avatar.png" alt="@review.User.Username's avatar" class="user-avatar-placeholder">
                                    <div class="comment-content">
                                        <div class="comment-header">
                                            <span class="comment-author font-inria-sans-400-20 color-text-accent">@review.User.Username</span>
                                            <span class="comment-date font-inria-sans-400-14 color-text-muted">@timeAgo</span>
                                        </div>

                                        <div class="rating-stars" data-rating="@review.Rating">
                                            @{
                                                double rating = review.Rating;
                                                int fullStars = (int)Math.Floor(rating);
                                                bool hasHalfStar = rating - fullStars >= 0.5;
                                                int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                                            }

                                            @for (int i = 0; i < fullStars; i++)
                                            {
                                                <img src="~/Assets/images/img_star.png" alt="Star" class="star img_star" />
                                            }

                                            @if (hasHalfStar)
                                            {
                                                <img src="~/Assets/images/img_star_half_empty.png" alt="Half Star" class="star img_star" />
                                            }

                                            @for (int i = 0; i < emptyStars; i++)
                                            {
                                                <img src="~/Assets/images/star_empty.png" alt="Empty Star" class="star" />
                                            }
                                        </div>

                                        <p class="comment-text font-inria-sans-400-20 color-text-primary" data-reviewid="@review.ReviewId">
                                            @review.Comment
                                        </p>

                                        <div class="comment-actions">
                                            <span class="text-action btn-edit" data-reviewid="@review.ReviewId">🖋️ Edit</span> |
                                            <span class="text-action btn-delete" data-reviewid="@review.ReviewId">🚫 Delete</span>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <!-- JS for comment operations -->
                <script src="~/Scripts/custom/CommentOperation.js"></script>

                <aside class="sidebar-suggested-products">
                    <h2 class="suggested-heading">
                        SUGGESTED @Model.Product.Category.Name.ToUpper()S
                    </h2>

                    <div class="suggested-products-grid" id="suggested-product-container">
                        @foreach (var product in Model.SuggestedProducts)
                        {
                            var categoryName = Model.Product.Category?.Name ?? "3D Model";
                            var folderName = categoryName.Replace(" ", "%20");
                            var imagePath = Url.Content($"~/Assets/{folderName}/product_{product.ProductId}/thumbnails/{product.Thumbnail}");

                            <div class="product-card suggested-product-slide" style="display: none;">
                                <a href="@Url.Action("ProductDetails", "ProductDetails", new { id = product.ProductId })">
                                    <img src="@imagePath" alt="@product.Name" class="product-card__image" />
                                </a>
                                <div class="product-card__info">
                                    <h3 class="product-card__title font-inria-sans-400-20 color-text-primary">
                                        @product.Name
                                    </h3>
                                    <div class="product-card__stats">
                                        <div class="product-card__stats-bg"></div>
                                        <div class="stat">
                                            <img src="~/Assets/images/388aad34e695fa51ceaefe99aa6aca483a1f231b.png" alt="Likes" />
                                            <span class="font-inria-sans-400-20 color-text-primary">@product.LikeCount</span>
                                        </div>
                                        <div class="stat">
                                            <img src="~/Assets/images/fb40bebcb2ed9b930570573bc8bb9c628dd8d085.png" alt="Views" style="opacity:0.4;" />
                                            <span class="font-inria-sans-400-20 color-text-primary">@product.ViewCount</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </aside>
                <script src="~/Scripts/custom/ProductDetailsOperation.js"></script>
            </div>
        </div>
    </section>
    @Html.Partial("_Footer")
</body>
</html>