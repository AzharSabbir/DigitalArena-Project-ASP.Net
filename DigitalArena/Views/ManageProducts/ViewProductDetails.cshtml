@model DigitalArena.Models.Custom.AdminProductDetailViewModel

@{
    ViewBag.Title = "Product Details";
    Func<DateTime, string> formatDate = d => d.ToString("dd MMM yyyy hh:mm tt");
}
<!-- Breadcrumb Navigation -->
<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb bg-white px-3 py-2 rounded shadow-sm">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "AdminDashboard")" class="text-decoration-none text-dark">Admin</a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.RouteUrl("ManageProductsRoute")" class="text-decoration-none text-dark">Manage Products</a>
        </li>
        <li class="breadcrumb-item active text-primary" aria-current="page">
            Product Details
        </li>
    </ol>
</nav>


<div class="d-flex justify-content-between align-items-center mb-2">
    <h2 class="mb-0">Product Details</h2>
    <button type="button"
            class="btn btn-sm btn-outline-secondary"
            onclick="openProductStatusModal(@Model.Product.ProductId, '@Model.Product.Status')">
        <i class="bi bi-pencil-square me-1"></i> Change Product Status
    </button>
</div>

<div class="card mb-4 shadow-sm">
    <div class="row no-gutters">
        <div class="col-md-4">
            <img src="~/Assets/@Model.Category.Name/product_@Model.Product.ProductId/thumbnails/@Model.Product.Thumbnail" alt="@Model.Product.Name" class="img-fluid rounded-start" />
        </div>
        <div class="col-md-8">
            <div class="card-body">
                <h3 class="card-title">@Model.Product.Name</h3>

                <p class="card-text text-muted">
                    <strong>Category:</strong> @Model.Category.Name
                </p>

                <p class="card-text">
                    <strong>Product ID:</strong> @Model.Product.ProductId
                </p>

                <p class="card-text">
                    <strong>Price:</strong> @Model.Product.Price BDT
                </p>

                <p class="card-text">
                    <strong>Status:</strong>
                    @if (Model.Product.Status == "Approved")
                    {
                        <span class="badge bg-success text-white">@Model.Product.Status</span>
                    }
                    else if (Model.Product.Status == "Rejected")
                    {
                        <span class="badge bg-danger text-white">@Model.Product.Status</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary text-white">@Model.Product.Status</span>
                    }
                </p>

                <p class="card-text">
                    <strong>Active:</strong>
                    @if (Model.Product.IsActive)
                    {
                        <span class="badge bg-success">Yes</span>
                    }
                    else
                    {
                        <span class="badge bg-danger">No</span>
                    }
                </p>

                <p class="card-text">
                    <strong>Likes:</strong>
                    <i class="bi bi-hand-thumbs-up-fill text-success"></i> @Model.Product.LikeCount
                    &nbsp;|&nbsp;
                    <strong>Dislikes:</strong>
                    <i class="bi bi-hand-thumbs-down-fill text-danger"></i> @Model.Product.UnlikeCount
                </p>

                <p class="card-text">
                    <strong>Created At:</strong> @formatDate(Model.Product.CreatedAt)
                </p>

                <p class="card-text">
                    <strong>Total Purchases:</strong> @Model.PurchaseCount
                </p>
            </div>
        </div>
    </div>
</div>

<div class="mb-4">
    <h4>Description</h4>
    <p>@Model.Product.Description</p>
</div>

@if (Model.Seller != null)
{
    <div class="mb-4">
        <h4>Seller Information</h4>
        <ul class="list-group">
            <li class="list-group-item"><strong>Seller ID:</strong> @Model.Seller.UserId</li>
            <li class="list-group-item"><strong>Name:</strong> @Model.Seller.FullName</li>
            <li class="list-group-item"><strong>Email:</strong> @Model.Seller.Email</li>
            <li class="list-group-item"><strong>Username:</strong> @Model.Seller.Username</li>
        </ul>
    </div>
}

<div class="mb-4">
    <div class="d-flex justify-content-between align-items-center mb-2">
        <h4 class="mb-0">Product Files</h4>
        @if (Model.ProductFiles.Any())
        {
            <button type="button"
                    class="btn btn-outline-primary btn-sm"
                    onclick="downloadAllFiles(@Model.Product.ProductId)">
                <i class="bi bi-file-zip-fill me-1"></i> Download All
            </button>
        }
    </div>

    @if (Model.ProductFiles.Any())
    {
        <ul class="list-group">
            @foreach (var file in Model.ProductFiles)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div>
                        <strong>@file.FileName</strong> <span class="text-muted">(@file.FileFormat)</span>
                    </div>
                    <button type="button"
                            class="btn btn-sm btn-outline-success"
                            onclick="downloadFile(@file.ProductFileId)">
                        <i class="bi bi-download"></i>
                    </button>
                </li>
            }
        </ul>
    }
    else
    {
        <div class="alert alert-warning mt-2">No files uploaded for this product.</div>
    }
</div>

<iframe id="downloadFrame" style="display:none;"></iframe>

<script>
    function downloadFile(fileId) {
        const frame = document.getElementById("downloadFrame");
        frame.src = '@Url.Action("DownloadSingleFile", "ManageProducts")' + "?fileId=" + fileId;
    }

    function downloadAllFiles(productId) {
        const frame = document.getElementById("downloadFrame");
        frame.src = '@Url.Action("DownloadAllFiles", "ManageProducts")' + "?productId=" + productId;
    }
</script>



<div class="mb-4">
    <h4>Reviews</h4>

    @if (Model.Reviews.Any())
    {
        foreach (var review in Model.Reviews.OrderByDescending(r => r.CreatedAt))
        {
            string statusBadgeClass = "bg-secondary";
            if (review.Status == "Approved")
            {
                statusBadgeClass = "bg-success";
            }
            else if (review.Status == "Pending")
            {
                statusBadgeClass = "bg-warning text-dark";
            }
            else if (review.Status == "Rejected")
            {
                statusBadgeClass = "bg-danger";
            }

            <div class="card mb-2 border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <div>
                            <h6 class="card-subtitle text-primary mb-0">@review.User.FullName</h6>
                        </div>
                        <div class="d-flex align-items-center gap-2">
                            <span class="badge @statusBadgeClass">@review.Status</span>
                            <button type="button"
                                    class="btn btn-sm btn-outline-secondary"
                                    onclick="openStatusModal(@review.ReviewId, '@review.Status')">
                                <i class="bi bi-pencil-square me-1"></i> Change
                            </button>
                        </div>
                    </div>
                    <p class="mb-1"><strong>Rating:</strong> @review.Rating / 5</p>
                    <p class="mb-2">@review.Comment</p>
                    <small class="text-muted">Reviewed on @formatDate(review.CreatedAt)</small>
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-info">No reviews available for this product.</div>
    }
</div>

<!-- Change Review Status Modal -->
<div class="modal fade" id="statusModal" tabindex="-1" role="dialog" aria-labelledby="statusModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <form method="post" action="@Url.Action("UpdateReviewStatus", "ManageProducts")">
                <div class="modal-header">
                    <h5 class="modal-title" id="statusModalLabel">Change Review Status</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="reviewId" id="modalReviewId" />
                    <div class="mb-3">
                        <label for="newStatus" class="form-label">Select New Status</label>
                        <select name="newStatus" id="modalNewStatus" class="form-select">
                            <option value="Approved">Approved</option>
                            <option value="Pending">Pending</option>
                            <option value="Rejected">Rejected</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer pt-0">
                    <button type="submit" class="btn btn-primary btn-sm">Update</button>
                    <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Change Product Status Modal -->
<div class="modal fade" id="productStatusModal" tabindex="-1" aria-labelledby="productStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <form method="post" action="@Url.Action("UpdateProductStatus", "ManageProducts")">
                <div class="modal-header">
                    <h5 class="modal-title" id="productStatusModalLabel">Change Product Status</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="productId" id="modalProductId" />
                    <div class="mb-3">
                        <label for="newProductStatus" class="form-label">Select New Status</label>
                        <select name="newStatus" id="modalProductStatus" class="form-select">
                            <option value="Approved">Approved</option>
                            <option value="Pending">Pending</option>
                            <option value="Rejected">Rejected</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer pt-0">
                    <button type="submit" class="btn btn-primary btn-sm">Update</button>
                    <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>





<script>
    function openProductStatusModal(productId, currentStatus) {
        document.getElementById("modalProductId").value = productId;
        document.getElementById("modalProductStatus").value = currentStatus;
        var modal = new bootstrap.Modal(document.getElementById('productStatusModal'));
        modal.show();
    }
</script>


<script>
    function openStatusModal(reviewId, currentStatus) {
        document.getElementById("modalReviewId").value = reviewId;
        document.getElementById("modalNewStatus").value = currentStatus;
        var modal = new bootstrap.Modal(document.getElementById('statusModal'));
        modal.show();
    }
</script>


<a href="@Url.RouteUrl("ManageProductsRoute")" class="btn btn-secondary">← Back to Product List</a>
