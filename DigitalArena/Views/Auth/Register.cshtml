@model DigitalArena.Models.UserModel
@{
    ViewBag.Title = "Sign Up";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Sign Up - Digital Arena</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />
    <style>
        body {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f8f9fa;
        }

        .signup-card {
            width: 100%;
            max-width: 400px;
            padding: 2rem;
            box-shadow: 0 0 25px rgba(0, 0, 0, 0.1);
            border-radius: 1rem;
            background-color: white;
        }

        .password-toggle {
            position: absolute;
            top: 50%;
            right: 1rem;
            transform: translateY(-50%);
            cursor: pointer;
            color: gray;
        }

        .brand-link {
            text-decoration: none;
            color: #0d6efd;
        }

            .brand-link:hover {
                text-decoration: underline;
            }
    </style>
</head>
<body>
    @if (ViewBag.Message != null)
    {
        var alertClass = ViewBag.IsSuccess != null && (bool)ViewBag.IsSuccess ? "success" : "danger";
        <div class="alert alert-@alertClass alert-dismissible fade show mt-3" role="alert" id="statusAlert">
            @ViewBag.Message
        </div>
        <script>
            setTimeout(function () {
                var alertBox = document.getElementById('statusAlert');
                if (alertBox) {
                    alertBox.classList.remove('show');
                    alertBox.classList.add('fade');
                    setTimeout(function () {
                        alertBox.remove();
                    }, 300); // wait for fade transition to complete
                }
            }, 2000);
        </script>
    }
    <header class="p-3 bg-white fixed-top">
        <div class="container-fluid d-flex align-items-center">
            <a href="/" class="d-flex align-items-center text-decoration-none">
                <img src="~/assets/site-images/site-logo.png" alt="Logo" width="40" height="40" class="me-2" />
                <span class="fs-5 fw-bold text-dark">Digital Arena</span>
            </a>
        </div>
    </header>

    <div class="signup-card">
        <h4 class="text-muted mb-1">Welcome to</h4>
        <h3 class="fw-bold text-primary mb-4">Digital Arena</h3>

        @using (Html.BeginForm("Register", "Auth", FormMethod.Post))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger small mb-2" })

            <div class="form-group mb-3">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email Address", type = "email", required = "required" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger small" })
            </div>

            <div class="form-group mb-3 d-flex gap-2">
                <div class="w-50">
                    @Html.TextBoxFor(m => m.Username, new
                    {
                        @class = "form-control",
                        placeholder = "Username",
                        pattern = "^[a-z0-9]{3,32}$",
                        title = "Username must be 3 to 32 characters long and contain only lowercase letters and digits",
                        required = "required"
                    })
                    @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger small" })
                </div>
                <div class="w-50">
                    @Html.TextBoxFor(m => m.Phone, new
                    {
                        @class = "form-control",
                        placeholder = "Phone Number",
                        pattern = "^(?:\\+880|880|0)(1[2-9]\\d{8})$",
                        title = "Enter a valid phone number",
                        required = "required"
                    })
                    @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger small" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Full Name", required = "required" })
                @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger small" })
            </div>

            <div class="form-group mb-3 position-relative">
                @Html.PasswordFor(m => m.Password, new
                {
                    @class = "form-control",
                    placeholder = "Password",
                    id = "passwordInput",
                    pattern = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^a-zA-Z\\d]).{8,}$",
                    title = "Password must be at least 8 characters and include at least one uppercase letter, one lowercase letter, one digit, and one special character.",
                    required = "required"
                })
                <span class="password-toggle" onclick="togglePasswordVisibility()">
                    <i class="bi bi-eye" id="eyeIcon"></i>
                </span>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger small" })
            </div>

            <button type="submit" class="btn btn-primary w-100 mb-3">Sign Up</button>
        }

        <p class="text-center mb-0">
            Already have an account? <a href="@Url.Action("Login", "Auth")" class="text-primary">Login</a>
        </p>
    </div>

    <script>
        function togglePasswordVisibility() {
            var input = document.getElementById("passwordInput");
            var icon = document.getElementById("eyeIcon");
            if (input.type === "password") {
                input.type = "text";
                icon.classList.remove("bi-eye");
                icon.classList.add("bi-eye-slash");
            } else {
                input.type = "password";
                icon.classList.remove("bi-eye-slash");
                icon.classList.add("bi-eye");
            }
        }
    </script>
</body>
</html>
